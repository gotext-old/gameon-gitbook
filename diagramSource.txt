http://plantuml.com/plantuml

====================
WebSocket Protocol

http://plantuml.com/plantuml/png/lLPDRnen4BtlhnZHGzk8ffMg81M5I8HasqeXHSkXP-CTM9V5fhQ1eYZ_lVQmdopGV4ZT0sWzuvatRzxOQ-P2Bfbc2v3AuZNZyvbMAnaFLAeql0df2KpDArJIPlRRVYUyw5Ji1d-lK7A4Xm3SCsBQ2YwMJDf6x1jw6cvAnwWpbyyN5vtEDRdSYIdU2Od7x7sjrIPR_XJsFmrkwzlsitSk1k7Db-0nM9QvOP0AT7_CmAYstXfYB9XLkkLjmxejKce1zsI9wfPGQ6F1syaQHa7Gw-L9k98IkJNGwmN123vSmR2RBy9Fd8mLdwCD6BTYpIowhDw9l3IoUDj-E3y_Vmo6j3ZgmZ9bMzJjozt_z_Yg_M2tI-n2wvUYxjXMctRu5e9Qe_QXyi9WAcHim38zGmlQGNv1vDsEw6GPKH3bPRYMP4KGf1IdbdfMO2eeiWeCMsDCmDha9ARq0fp9jnOcw4dX2SPj60i-9zB9RoFIr1NdVeGCKCQaO8yqAsuFX1Qpn7PXu2JEX3Gkl0_gzauLi8bQMR09xlZnlUoRhUI9LbAjJ3Vlh4DBq7nZITr5tppwI_zB959MAZZdxPX3mK-rOKflc7OzMw0nR8P5MlSSm4OgTIuPnXnRHGpqNkDV8qUnHWEuTdiCJBMBeNDc_SCSeGKGcoZZO2JCJT1ocMvzEiTMuRpJ3xpBTGGknTbxCXUDeRT28PdopWh1SHUyrOOzvaPLpyAs7-M0VgckK_6gUyYfIUpunxZPQQDC3Sj9cXVAS-nrbJ7aU2kFZZe_3RbyLIgURF6GQWe2UEeRKmwZDyPO6SbQwUL4bCjXbkqRfgawbAi85kwYXKzWFrMSMQ7aKnjmP5kz9TAtP2CiJmYm-USKkaF6EXMum1zdoftZ3J1Xz9mz-uNVPMXhbK2klp_2FhFwlIFtHUBQk2b2xq-7WZ1mhxHDZWdjkN3gh9tGPqM2OVJgXEMrKnVawoCtPkB03TQOowEJydy78__Oy2U0oGboFcui82Y_AFPFY9BIFSEXcoWMfhYfookYTi1KNeP_0G00
@startuml
skinparam noteBackgroundColor #FFFFFF
skinparam noteFontColor #EA6F56
skinparam sequence {
    ParticipantBackgroundColor #DDDDDD
    ParticipantBorderColor #35566B
    LifeLineBorderColor #35566B
    ArrowColor #0FA0CE
    LifeLineBackgroundColor #65CFD9
}
participant Client as P
participant "Mediator" as M
participant "Room N" as R
participant "First Room" as FR

== Client connects ==

P -> M: connect WebSocket
activate M
P ->> M: ready,{...}
M ->> P: player,<playerId>,{type: "joinpart",...}
note over M: Mediator finds target room
M ->> P: player,<playerId>,{type: "joinpart",...}
M ->> R: connect WebSocket
activate R
R ->> M: ack,{...}
note left
    Mediator connects to saved room,
    if room can't be reached, Sick Room
    will fill in
end note
M -->> P: ack,{...}
note right: Contains cached info about the room

== Asynchronous: Client to room ==

    P ->> M: room,<roomId>,{...}
    M ->> R: room,<roomId>,{...}
    note left: Mediator forwards message to room

== Asynchronous: Room to Client ==

    note over M
        Mediator receives events from room
        and forwards those that apply to the
        player (playerId or *)
    end note

    R ->> M: player,*,{type: "chat", ...}
    M ->> P: player,*,{...}
    R ->> M: player,<playerId>,{type: "event", ...}
    M ->> P: player,<playerId>,{...}

== Asynchronous: SOS ==

    P ->> M: sos,*,{...}
    note over M
        Mediator moves the player to First Room
    end note
    M ->> R: roomGoodbye,<roomId>,{...}
    R ->> M: close WebSocket
    deactivate R
    M ->> P: ack,{...}
    M ->> FR: roomHello,<roomId>,{...}
    activate FR
    FR ->> M: player,<playerId>,{type: "location", ...}
    M ->> P: player,<playerId>,{type: "location", ...}

== Asynchronons: Switch rooms ==

    P ->> M: room,<roomId>,{content: "/go N", ...}
    M ->> FR: room,<roomId>,{content: "/go N", ...}
    FR ->> M: playerLocation,<playerId>,{ type: "exit", ...}
    M ->> P: player,<playerId>,{type: "joinpart",...}
    note over M
        Mediator moves the player to whatever Room is North
    end note
    M ->> P: player,<playerId>,{type: "joinpart",...}
    M ->> FR: roomGoodbye,<roomId>,{...}
    deactivate FR
    M ->> P: player,<playerId>,{type: "joinpart",...}
    M ->> R: connect
    activate R
    M ->> P: player,<playerId>,{type: "joinpart",...}
    M ->> P: ack,{...}
    R ->> M: ack,{...}
    M ->> R: roomHello,<roomId>,{...}
    R ->> M: player,<playerId>,{type: "location", ...}
    M ->> P: player,<playerId>,{type: "location", ...}

== Client closes connection ==

P ->> M: close WebSocket
M ->> R: close WebSocket
note left: Mediator disconnects from room
deactivate R
deactivate M
@enduml

==================================
Oauth2

http://plantuml.com/plantuml/uml/TL9DJm8n4BttLunu9Z4nRA87agMm9CO4uq8yb-wuDYmjJeiQZV_TQO58GUUqcNdpFgRhLyPk5AarM1TmfFIg9RUrZNIT8xYiKWcVeIfdmtu-AOjgK1pDFRvkqMg4Bm5S3ug2qMQZR3ZZ7gSwWpbgaFQGwy6WA4O9Sc-UyTvO_6zU4hdtVVkgAg_a95yxLIy6iXhVY6yXb0xSw2qyKW-KXuNO_Dg1dkmCsf0cCfzCrHfXPY-Wt8ONJavlHcC2JcSvCW8ScKyLZBDGCtAlLTP2IEWFUUCM7YVr72WUq0S83ZhN6XljcJSLC99EPz3l3uSW6OoD8TG1djbynYyQFDxPyPVrROu2wHfabgJsAyA65WTyl4XQuln6yzI3iWsqn9ayR93MnlieMDRdjjuDtqHbYfeLZyrbuG_ci06jkcx9xvL5JzbtlYOV-aNP5ly8b0Kvs4hqMgFtC7Shj2SUuYyDZbya0ILXx7lJMhPozpI7fVBynG9gnn4Inz5J48OjsOZDJ_y3
@startuml
skinparam noteBackgroundColor #FFFFFF
skinparam noteFontColor #EA6F56
skinparam sequence {
    ParticipantBackgroundColor #DDDDDD
    ParticipantBorderColor #35566B
    LifeLineBorderColor #35566B
    ArrowColor #0FA0CE
    LifeLineBackgroundColor #65CFD9
}

actor "User" as U
participant "Client" as C
participant "Game On! Auth service" as GO
participant "Authorization Server" as AS

C -> GO: REST request to login
activate GO
GO -->> C: Redirect for Authorization
deactivate GO

C -> AS: Authorization Code Request
activate AS
U -> AS: User Authenticates and grants permission
AS -->> C: Redirect with authorization code
deactivate AS

C -> GO: Authorized callback
activate GO

GO -> AS: Exchange Authorization Code
activate AS
AS -->> GO: Access Token
deactivate AS
note over GO: Create signed JWT based on access token
GO -->> C: return JWT
deactivate GO
@enduml
